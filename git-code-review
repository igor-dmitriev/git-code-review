#!/usr/bin/env bash

USAGE="<branch-name>

Generate a merge request and show what it will look like when merged"

source "$(git --exec-path)/git-sh-setup"

function fetch() {
        git fetch "${1}"
}

function branch_exists() {
    git rev-parse --verify "$1" > /dev/null 2>&1
    return
}

function main() {
    
    local master_branch="master"
    local master_remote="origin"
    local pr_branch=""
    local pr_remote="${master_remote}"
    while [ $# -gt 0 ]; do
        case $1 in
            -m | --master)
                master_branch="$2"
                shift 2
                ;;
            --remote)
                master_remote="$2"
                pr_remote="$2"
                shift 2
                ;;
            --master-remote)
                master_remote="$2"
                shift 2
                ;;

            --pr-remote)
                pr_remote="$2"
                shift 2
                ;;
            *)
                pr_branch="$1"
                shift
                ;;
        esac
    done
          
    local merge_request_branch="code-review/${pr_branch}"
    require_work_tree_exists
    cd_to_toplevel
    require_clean_work_tree "rebase" "Please commit or stash changes."
    if branch_exists "${merge_request_branch}"; then
        echo "${merge_request_branch} already exists. Please delete or checkout."
        die
    fi
    
    fetch "${master_remote}"

    # Save the extra fetch
    if [ ! "${pr_remote}" != "${master_remote}" ]; then
        fetch "${pr_remote}"
    fi

    
    git branch "${merge_request_branch}" "${pr_branch}"
    git checkout "${merge_request_branch}"

    git rebase "${master_branch}"
    echo "${merge_request_branch} created. Remember to delete the branch when you are finished."
}


main "$@"
